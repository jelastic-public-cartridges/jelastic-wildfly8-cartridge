## -*- shell-script -*- ######################################################
##                                                                          ##
##  JBoss Bootstrap Script Configuration                                    ##
##                                                                          ##
##############################################################################

#
# This file is optional; it may be removed if not needed.
#

#
# Specify the maximum file descriptor limit, use "max" or "maximum" to use
# the default, as queried by the system.
#
# Defaults to "maximum"
#
#MAX_FD="maximum"

#
# Specify the profiler configuration file to load.
#
# Default is to not load profiler configuration file.
#
#PROFILER=""

#
# Specify the location of the Java home directory.  If set then $JAVA will
# be defined to $JAVA_HOME/bin/java, else $JAVA will be "java".
#
#JAVA_HOME="/opt/java/jdk"

#
# Specify the exact Java VM executable to use.
#
#JAVA=""

if [ "x$JBOSS_MODULES_SYSTEM_PKGS" = "x" ]; then
   JBOSS_MODULES_SYSTEM_PKGS="org.jboss.byteman,org.jboss.logmanager"
fi

# Uncomment the following line to prevent manipulation of JVM options
# by shell scripts.
#
#PRESERVE_JAVA_OPTS=true

#
# Specify options to pass to the Java VM.
#
source /etc/jelastic/environment;
source $OPENSHIFT_CARTRIDGE_SDK_BASH

if [ -e /opt/repo/versions/${Version}/bin/variablesparser.sh ]; then
      . /opt/repo/versions/${Version}/bin/variablesparser.sh
fi

[ -z "$XMS" ] && { XMS=32M; }
[ -z "$XMN" ] && { XMN=30M; }
[ -z "$GC" ] && { GC="-XX:+UseG1GC"; }
memory_total=`free -m | grep Mem | awk '{print $2}'`;
[ -z "$XMX" ] && { let XMX=memory_total-35; XMX="${XMX}M"; }
[ -z "confresult" ] && confresult="-javaagent:/opt/repo/versions/${Version}/modules/jelastic-gc-agent.jar -XX:-UseAdaptiveSizePolicy"

if [ -z "$JVM_PERMGEN_RATIO" ]; then
  JVM_PERMGEN_RATIO=0.2
fi

max_memory_mb=${OPENSHIFT_GEAR_MEMORY_MB}
max_permgen=$( echo "$max_memory_mb * $JVM_PERMGEN_RATIO" | bc | awk '{print int($1+0.5)}')

if [ $max_permgen -gt 256 ]
then
	max_permgen=256
fi

memory_options="-Xms${XMS} -Xmn${XMN} -Xmx${XMX} -XX:MaxPermSize=${max_permgen}m ${GC} -XX:+AggressiveOpts ${confresult}"

if [ "x$JAVA_OPTS" = "x" ]; then
   JAVA_OPTS="$memory_options -DOPENSHIFT_APP_UUID=${OPENSHIFT_APP_UUID} -Xbootclasspath/p:/opt/repo/versions/8.2/modules/system/layers/base/org/jboss/logmanager/main/jboss-logmanager-1.5.2.Final.jar -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dorg.jboss.resolver.warning=true -Djava.net.preferIPv4Stack=true -Dfile.encoding=UTF-8 -Djboss.node.name=$(hostname) -Djgroups.bind_addr=${OPENSHIFT_JBOSSAS_IP} -Dorg.apache.coyote.http11.Http11Protocol.COMPRESSION=on"
   if [ ! -z "$ENABLE_JPDA" ]; then
      JAVA_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,address=${OPENSHIFT_WILDFLY_IP}:8787,server=y,suspend=n ${JAVA_OPTS}"
   fi
   JAVA_OPTS="$JAVA_OPTS -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS -Djava.awt.headless=true"
else
   echo "JAVA_OPTS already set in environment; overriding default settings with values: $JAVA_OPTS"
fi

# Sample JPDA settings for remote socket debugging
#JAVA_OPTS="$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n"

# Sample JPDA settings for shared memory debugging
#JAVA_OPTS="$JAVA_OPTS -agentlib:jdwp=transport=dt_shmem,server=y,suspend=n,address=jboss"

# Uncomment to not use JBoss Modules lockless mode
#JAVA_OPTS="$JAVA_OPTS -Djboss.modules.lockless=false"

# Uncomment to gather JBoss Modules metrics
#JAVA_OPTS="$JAVA_OPTS -Djboss.modules.metrics=true"

# Uncomment this in order to be able to run WildFly on FreeBSD
# when you get "epoll_create function not implemented" message in dmesg output
#JAVA_OPTS="$JAVA_OPTS -Djava.nio.channels.spi.SelectorProvider=sun.nio.ch.PollSelectorProvider"
